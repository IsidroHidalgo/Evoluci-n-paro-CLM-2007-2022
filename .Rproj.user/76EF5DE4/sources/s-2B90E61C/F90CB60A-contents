# -----------------------------------------------------------------------------------
# (c) Observatorio del Mercado de Trabajo. Junta de Comunidades de Castilla-La Mancha
# (c) Isidro Hidalgo Arellano (ihidalgo@jccm.es)
# -----------------------------------------------------------------------------------

# Borramos los objetos en memoria
rm(list = ls(all.names = TRUE))

# Cargamos las librerías necesarias
library(openxlsx)
library(tidyverse)
library(egg)


# Establecemos variables y parámetros generales...
options(warn=-1)
# paleta_heatmaps <- c(rgb(.8,.9,.8,1), rgb(.753,0,0,1))
paleta_heatmaps <- c(rgb(.98,.8,.45,1), "blue4")
paleta_líneas <- c("blue4", "orange","darkgreen", "red", "black", "pink",
                   "lightblue", "darkorange","lightgreen", "red4", "azure4", "green")
tipo_líneas <- c("dashed", "solid", "longdash", "dotdash", "dotted", "solid",
                 "solid", "solid", "longdash", "solid", "dotdash", "solid", "dotdash")

variables <- tibble(var = c("edad",
                            "sexo",
                            "tramo_edad",
                            "tiempo_búsqueda_empleo_agregado",
                            "sector",
                            "tiempo_búsqueda_empleo"),
                    literal = c("edad",
                                "sexo",
                                "tramo de edad",
                                "tiempo de búsqueda de empleo agregado",
                                "sector",
                                "tiempo de búsqueda de empleo")
) # variables

niveles_tiempo_búsqueda_empleo <- c('<= 7 DIAS', '> 7 <= 15 DIAS', '> 15 <= 30 DIAS',
                                    '> 1 <= 3 MESES', '> 3 <= 6 MESES', '> 6 <= 9 MESES',
                                    '> 9 <= 12 MESES', '> 12 <= 15 MESES','> 15 <= 18 MESES',
                                    '> 18 <= 21 MESES', '> 21 <= 24 MESES', '> 24 MESES')

búsqueda_empleo <- tibble(original = niveles_tiempo_búsqueda_empleo,
                          largo = c('t <= 7 días', '7 días < t <= 15 días',
                                    '15 días < t <= 30 días', '1 mes < t <= 3 meses',
                                    '3 meses < t <= 6 meses', '6 meses < t <= 9 meses',
                                    '9 meses < t <= 12 meses', '12 meses < t <= 15 meses',
                                    '15 meses < t <= 18 meses', '18 meses < t <= 21 meses',
                                    '21 meses < t <= 24 meses', 't > 24 meses'),
                          corto = c("t <= 6 meses", "t <= 6 meses", "t <= 6 meses",
                                    "t <= 6 meses", "t <= 6 meses", "6 meses < t <= 12 meses",
                                    "6 meses < t <= 12 meses", "12 meses < t <= 24 meses",
                                    "12 meses < t <= 24 meses", "12 meses < t <= 24 meses",
                                    "12 meses < t <= 24 meses", "t > 24 meses")
) # búsqueda_empleo

# Cargamos los datos...
fichero <- "//jclm.es/PROS/SC/OBSERVATORIOEMPLEO/R/Evolución paro CLM 2007-2022/Parados.xlsx"
datos <- read.xlsx(xlsxFile = fichero,
                   sheet = "Media paro registrado 12M",
                   colNames = TRUE)

# configuramos las variables
datos$año <- factor(datos$año, levels = (min(datos$año)):(max(datos$año)), ordered = TRUE)
datos$sexo <- as.factor(datos$sexo)
datos$sector <- as.factor(datos$sector)

datos$tramo_edad <- cut(datos$edad,
                        breaks = c(0, 29, 45, 1000),
                        include.lowest = TRUE,
                        labels = c("Menor de 30 años", "Desde 30 a 44 años", "De 45 años o más"))
datos$tramo_edad <- factor(datos$tramo_edad,
                           levels = c("Menor de 30 años", "Desde 30 a 44 años", "De 45 años o más"),
                           ordered = TRUE)

datos$tiempo_búsqueda_empleo <- factor(datos$tiempo_búsqueda_empleo,
                                       levels = niveles_tiempo_búsqueda_empleo,
                                       ordered = TRUE)
datos <- merge(datos, búsqueda_empleo,
               by.x = "tiempo_búsqueda_empleo", by.y = "original", sort = FALSE)

datos$tiempo_búsqueda_empleo <- factor(datos$largo,
                                       levels = búsqueda_empleo$largo,
                                       ordered = TRUE)
datos$largo <- NULL

datos$tiempo_búsqueda_empleo_agregado <- factor(datos$corto,
                                                levels = c("t <= 6 meses",
                                                           "6 meses < t <= 12 meses",
                                                           "12 meses < t <= 24 meses",
                                                           "t > 24 meses"),
                                                ordered = TRUE)
datos$corto <- NULL

datos <- as_tibble(datos) %>%
     select(año, sexo, edad, sector, tiempo_búsqueda_empleo, tramo_edad,
            tiempo_búsqueda_empleo_agregado, parados)
summary(datos)

# Representamos la evolución del paro en estos 15 años
resumen <- datos %>%
     group_by(año) %>%
     summarise(parados = sum(parados)) %>%
     mutate(año = as.numeric(as.character(año)))

años <- c(2007, 2013, 2019, 2020, 2022)
paro_años <- resumen %>%
     filter(año %in% años) %>%
     select(parados) %>%
     mutate(parados = round(parados, 0))
puntos <- data.frame(años, paro_años)

graf <- ggplot(resumen, aes(año, parados)) +
     geom_line(size = 2, col = paleta_líneas[1], alpha = 0.5) +
     xlab("")+
     ylab("número de parados") +
     ggtitle("Evolución del paro registrado en Castilla-La Mancha desde 2007") +
     geom_point(puntos, mapping = aes(x = años, y = parados, shape = "circle filled", size = 1,
                                      fill = paleta_líneas[1], alpha = 0.5)) +
     theme(legend.position = "none", axis.title = element_text(face="bold", size = 11),
           axis.text = element_text(face="bold", size = 10),
           title = element_text(face="bold", size = 12)) +
     scale_y_continuous(labels = function(x) format(x, big.mark = ".", scientific = FALSE))

ggsave(paste0("./Gráficos/Evolución del paro registrado en Castilla-La Mancha.pdf"),
       height = 5.66, width = 11.32)
     
# Montamos la función que genera los gráficos de evolución:
graf_evol <- function(variable){
     # INPUT: variable [alfanumérico; nombre de la variable a representar]
     # Produce 2 gráficos de evolución de la variable respecto al tiempo (desde 2007 hasta 2022):
     # - El primer gráfico (izquierda) muestra la evolución del paro registrado en valor absoluto
     # - El segundo gráfico (derecha) muestra la evolución de la distribución del paro registrado
     #   en porcentaje
     tabla <- select(datos, año, variable, parados)
     names(tabla) <- c("año", "variable", "parados")
     
     tabla_absolutos <- tabla %>%
          group_by(año, variable) %>% 
          summarise(parados = sum(parados))
     
     graf_absolutos <- ggplot(tabla_absolutos, aes(x = año, y = parados)) +
          geom_line(aes(group = variable, color = variable, linetype = variable),
                    size = 1.2, alpha = 0.6) +
          scale_color_manual(values = paleta_líneas, name = NULL) +
          scale_linetype_manual(values = tipo_líneas, name = NULL) +
          expand_limits(y = 0) +
          theme(legend.position = "none", axis.text = element_text(face="bold")) +
          xlab("") +
          ylab("número de parados") +
          guides(linetype = "none") +
          scale_y_continuous(labels = function(x) format(x, big.mark = ".", scientific = FALSE))
     
     tabla_porcentajes <- tabla %>%
          group_by(año) %>% 
          mutate(totales = sum(parados)) %>%
          group_by(variable, .add = TRUE) %>%
          summarise(porcentaje = 100*parados/totales) %>%
          group_by(año, variable) %>%
          summarise(porcentaje = sum(porcentaje))
     
     graf_porcentajes <- ggplot(tabla_porcentajes, aes(x = año, y = porcentaje)) +
          geom_line(aes(group = variable, colour = variable, linetype = variable),
                    size = 1.2, alpha = 0.6) +
          scale_color_manual(values = paleta_líneas, name = NULL) +
          scale_linetype_manual(values = tipo_líneas, name = NULL) +
          expand_limits(y = 0) +
          theme(legend.position = "bottom", axis.text = element_text(face="bold")) +
          xlab("") +
          ylab("porcentaje") +
          scale_y_continuous(labels = function(x) format(x, big.mark = ".", scientific = FALSE))

     graf <- ggarrange(graf_absolutos,
                       graf_porcentajes,
                       # labels = c("   valores absolutos", "distribución porcentual"),
                       # font.label = list(size = 1, alpha = 0.7),
                       ncol = 1, align = "hv")
     titulo <- paste0("Evolución del paro registrado según ",
                      variables$literal[variables$var == variable])
     graf <- annotate_figure(graf, top = text_grob(titulo, color = "black", face = "bold", size = 10))
  
     return(graf)
     
} # graf_evol

# Generamos los gráficos de evolución:
for (variab in variables$var[variables$var != "edad"]){
     print(graf_evol(variab))
     ggsave(paste0("./Gráficos/Evolución según ", variables$literal[variables$var == variab], ".pdf"),
            height = 5.66, width = 8.49)
}

# Montamos la función que genera los heatmaps comparativos:
heatmap_años <- function(variable1, variable2, inicio = 2007, fin = 2022){
     # INPUT: variable1 y variable2 [alfanuméricos; nombres de las 2 variables a representar]
     #        inicio y fin [numéricos; años a comparar]
     # Produce 2 heatmaps de las 2 variables para 2 años diferentes (2009 y 2022 por defecto):
     # - El gráfico de la izquierda muestra la distribución del paro registrado en el año "inicio"
     # - El gráfico de la derecha muestra la distribución del paro registrado en el año "fin"
     
     tabla <- select(datos, año, variable1, variable2, parados) %>%
          filter(año %in% c(inicio, fin))
     names(tabla) <- c("año", "variable1", "variable2", "parados")
     tabla <- tabla %>%
          group_by(año, variable1, variable2) %>%
          summarise(parados = sum(parados))
     
     graf <- ggplot(tabla, aes(x = variable1, y= variable2, fill = parados)) +
          geom_raster() +
          scale_fill_gradientn(colours = paleta_heatmaps) +
          facet_wrap(~ año) + 
          labs(x = "", y = "") +
          ggtitle(paste0("Paro registrado según ",
                         variables$literal[variables$var == variable1]," y ",
                         variables$literal[variables$var == variable2], " en ",
                         inicio, " y ", fin)) +
          theme(title = element_text(size = 10, face = "bold"),
                axis.text = element_text(size = 10, face = "bold"),
                strip.text = element_text(face = "bold"))
     
     return(graf)
     
} # heatmap_años

# Generamos los gráficos comparativos entre 2 años, para 2 variables:
for (i in 1:(length(variables$var)-1)){
     for (j in (i+1):length(variables$var)){
          print(heatmap_años(variables$var[i], variables$var[j]))
          ggsave(paste0("./Gráficos/Comparativa de ",
                        variables$literal[i],
                        " y ",
                        variables$literal[j],".pdf"),
                 height = 5.66, width = 11.32)
     } #j
} #i


# Montamos la función que genera los gráficos de funciones de densidad

densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
                             preCOVID = 2019, postCOVID = 2020, fin = 2022){
     # INPUT: variable [alfanumérico; nombre de la variable a representar]
     #        inicio, medio y fin [numéricos; años a comparar]
     # Produce un cuadro de gráficos comparando las distribuciones de la edad
     # dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
     
     tabla <- select(datos, año, variab, edad, parados) %>%
          filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
     names(tabla) <- c("año", "variable", "edad", "parados")
     
     tabla <- tabla %>%
          group_by(año, edad, variable) %>% 
          summarise(parados = sum(parados)) %>%
          mutate(parados = spline(edad ~
                                       parados))
     
     graf <- ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
          geom_line(alpha=0.6, size = 1) +
          facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
          ggtitle(paste0("Distribución por edades según año y ",
                         variables$literal[variables$var == variab])) +
          ylab("número de parados") +
          scale_color_manual(values = paleta_líneas) +
          scale_y_continuous(labels = function(x) format(x, big.mark = ".", scientific = FALSE)) +
          theme(strip.text = element_text(face = "bold"))
     
     return(graf)
     
} # densidad_compara

# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
                                                    "tiempo_búsqueda_empleo"))]){
     print(densidad_compara(variab))
     ggsave(paste0("./Gráficos/Distribución de edad según ",
                   variables$literal[variables$var == variab], ".pdf"),
            height = 5.66, width = 11.32)
}
