ggsave(paste0("./Gráficos/Comparativa de ",
variables$literal[i],
" y ",
variables$literal[j],".pdf"))
} #j
} #i
# Montamos la función que genera los gráficos de funciones de densidad
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2022, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_area(alpha=0.3) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
} # densidad_compara
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_area(alpha=0.3) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
}
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.3) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
}
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.5, size = 2) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
}
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.6, size = 1.5) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
} # densidad_compara
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.7, size = 1.3) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
} # densidad_compara
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.9, size = 1.3) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
} # densidad_compara
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.8, size = 1.2) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
} # densidad_compara
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = paleta_líneas)) +
geom_line(alpha=0.8, size = 1.2) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
} # densidad_compara
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
?palette
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
palette(paleta_líneas)
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.8, size = 1.2) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab]))
return(graf)
}
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.8, size = 1.2) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab])) +
scale_color_manual(paleta_líneas)
return(graf)
}
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
paleta_líneas
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.8, size = 1.2) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab])) +
scale_color_manual(paleta_líneas) +
scale_fill_manual(paleta_líneas)
return(graf)
}
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
densidad_compara <- function(variab, inicio = 2007, crisis = 2013,
preCOVID = 2019, postCOVID = 2020, fin = 2022){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
#        inicio, medio y fin [numéricos; años a comparar]
# Produce un cuadro de gráficos comparando las distribuciones de la edad
# dentro de cada estrato de la variable para 3 años diferentes (2009, 2019 y 2022 por defecto):
tabla <- select(datos, año, variab, edad, parados) %>%
filter(año %in% c(inicio, crisis, preCOVID, postCOVID, fin))
names(tabla) <- c("año", "variable", "edad", "parados")
tabla <- tabla %>%
group_by(año, edad, variable) %>%
summarise(parados = sum(parados))
graf <-ggplot(tabla, aes(x = edad, y = parados, color = año, fill = año)) +
geom_line(alpha=0.8, size = 1.2) +
facet_wrap(~ variable, ncol = dim(table(tabla$variable))[1]) +
ggtitle(paste0("Distribución por edades según año y ",
variables$literal[variables$var == variab])) +
scale_color_manual(paleta_líneas, .groups = año)
return(graf)
}
# Generamos los gráficos de funciones de densidad
for (variab in variables$var[!(variables$var %in% c("edad", "tramo_edad",
"tiempo_búsqueda_empleo"))]){
print(densidad_compara(variab))
ggsave(paste0("./Gráficos/Distribución de edad según ",
variables$literal[variables$var == variab], ".pdf"))
}
variable = "sector"
# INPUT: variable [alfanumérico; nombre de la variable a representar]
# Produce 2 gráficos de evolución de la variable respecto al tiempo (desde 2007 hasta 2022):
# - El primer gráfico (izquierda) muestra la evolución del paro registrado en valor absoluto
# - El segundo gráfico (derecha) muestra la evolución de la distribución del paro registrado
#   en porcentaje
tabla <- select(datos, año, variable, parados)
names(tabla) <- c("año", "variable", "parados")
tabla_absolutos <- tabla %>%
group_by(año, variable) %>%
summarise(parados = sum(parados))
graf_absolutos <- ggplot(tabla_absolutos, aes(x = año, y = parados)) +
geom_line(aes(group = variable, color = variable, linetype = variable),
size = 1.2, alpha = 0.6) +
scale_color_manual(values = paleta_líneas, name = NULL) +
scale_linetype_manual(values = tipo_líneas, name = NULL) +
expand_limits(y = 0) +
theme(legend.position = "bottom") +
xlab("") +
ylab("") +
guides(linetype = "none")
tabla_porcentajes <- tabla %>%
group_by(año) %>%
mutate(totales = sum(parados)) %>%
group_by(variable, .add = TRUE) %>%
summarise(porcentaje = 100*parados/totales) %>%
group_by(año, variable) %>%
summarise(porcentaje = sum(porcentaje))
graf_porcentajes <- ggplot(tabla_porcentajes, aes(x = año, y = porcentaje)) +
geom_line(aes(group = variable, colour = variable, linetype = variable),
size = 1.2, alpha = 0.6) +
scale_color_manual(values = paleta_líneas, name = NULL) +
scale_linetype_manual(values = tipo_líneas, name = NULL) +
expand_limits(y = 0) +
theme(legend.position = "bottom") +
xlab("") +
ylab("")
leyenda <- get_legend(graf_absolutos)
ggarrange(graf_absolutos, graf_porcentajes, ncol = 1)
library(egg)
ggarrange(graf_absolutos, graf_porcentajes, ncol = 1)
ggarrange(graf_absolutos+ theme(legend.position = "none"), graf_porcentajes, ncol = 1)
?plot_grid
# Montamos la función que genera los gráficos de evolución:
graf_evol <- function(variable){
# Montamos la función que genera los gráficos de evolución:
graf_evol <- function(variable){
# Montamos la función que genera los gráficos de evolución:
graf_evol <- function(variable){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
# Produce 2 gráficos de evolución de la variable respecto al tiempo (desde 2007 hasta 2022):
# - El primer gráfico (izquierda) muestra la evolución del paro registrado en valor absoluto
# - El segundo gráfico (derecha) muestra la evolución de la distribución del paro registrado
#   en porcentaje
tabla <- select(datos, año, variable, parados)
names(tabla) <- c("año", "variable", "parados")
tabla_absolutos <- tabla %>%
group_by(año, variable) %>%
summarise(parados = sum(parados))
graf_absolutos <- ggplot(tabla_absolutos, aes(x = año, y = parados)) +
geom_line(aes(group = variable, color = variable, linetype = variable),
size = 1.2, alpha = 0.6) +
scale_color_manual(values = paleta_líneas, name = NULL) +
scale_linetype_manual(values = tipo_líneas, name = NULL) +
expand_limits(y = 0) +
theme(legend.position = "bottom") +
xlab("") +
ylab("") +
guides(linetype = "none")
tabla_porcentajes <- tabla %>%
group_by(año) %>%
mutate(totales = sum(parados)) %>%
group_by(variable, .add = TRUE) %>%
summarise(porcentaje = 100*parados/totales) %>%
group_by(año, variable) %>%
summarise(porcentaje = sum(porcentaje))
graf_porcentajes <- ggplot(tabla_porcentajes, aes(x = año, y = porcentaje)) +
geom_line(aes(group = variable, colour = variable, linetype = variable),
size = 1.2, alpha = 0.6) +
scale_color_manual(values = paleta_líneas, name = NULL) +
scale_linetype_manual(values = tipo_líneas, name = NULL) +
expand_limits(y = 0) +
theme(legend.position = "bottom") +
xlab("") +
ylab("")
leyenda <- get_legend(graf_absolutos)
# graf <- plot_grid(graf_absolutos + theme(legend.position = "none"),
#                   graf_porcentajes,
#                   axis = "l",
#                   greedy = TRUE,
#                   ncol = 1,
#                   nrow = 2,
#                   labels = c("Número de parados", "Distribución porcentual"),
#                   common.legend = TRUE,
#                   legend = "bottom",
#                   theme(plot.title = paste0("Evolución del número de parados y su distribución porcentual según ", variable)))
graf <- ggarrange(graf_absolutos+ theme(legend.position = "none"),
graf_porcentajes,ncol = 1,
labels = c("Número de parados", "Distribución porcentual"),
theme(plot.title = paste0("Evolución del número de parados y su distribución porcentual según ", variable)))
return(graf)
} # graf_evol
variab = variable
print(graf_evol(variab))
# Montamos la función que genera los gráficos de evolución:
graf_evol <- function(variable){
# INPUT: variable [alfanumérico; nombre de la variable a representar]
# Produce 2 gráficos de evolución de la variable respecto al tiempo (desde 2007 hasta 2022):
# - El primer gráfico (izquierda) muestra la evolución del paro registrado en valor absoluto
# - El segundo gráfico (derecha) muestra la evolución de la distribución del paro registrado
#   en porcentaje
tabla <- select(datos, año, variable, parados)
names(tabla) <- c("año", "variable", "parados")
tabla_absolutos <- tabla %>%
group_by(año, variable) %>%
summarise(parados = sum(parados))
graf_absolutos <- ggplot(tabla_absolutos, aes(x = año, y = parados)) +
geom_line(aes(group = variable, color = variable, linetype = variable),
size = 1.2, alpha = 0.6) +
scale_color_manual(values = paleta_líneas, name = NULL) +
scale_linetype_manual(values = tipo_líneas, name = NULL) +
expand_limits(y = 0) +
theme(legend.position = "bottom") +
xlab("") +
ylab("") +
guides(linetype = "none")
tabla_porcentajes <- tabla %>%
group_by(año) %>%
mutate(totales = sum(parados)) %>%
group_by(variable, .add = TRUE) %>%
summarise(porcentaje = 100*parados/totales) %>%
group_by(año, variable) %>%
summarise(porcentaje = sum(porcentaje))
graf_porcentajes <- ggplot(tabla_porcentajes, aes(x = año, y = porcentaje)) +
geom_line(aes(group = variable, colour = variable, linetype = variable),
size = 1.2, alpha = 0.6) +
scale_color_manual(values = paleta_líneas, name = NULL) +
scale_linetype_manual(values = tipo_líneas, name = NULL) +
expand_limits(y = 0) +
theme(legend.position = "bottom") +
xlab("") +
ylab("")
# leyenda <- get_legend(graf_absolutos)
# graf <- plot_grid(graf_absolutos + theme(legend.position = "none"),
#                   graf_porcentajes,
#                   axis = "l",
#                   greedy = TRUE,
#                   ncol = 1,
#                   nrow = 2,
#                   labels = c("Número de parados", "Distribución porcentual"),
#                   common.legend = TRUE,
#                   legend = "bottom",
#                   theme(plot.title = paste0("Evolución del número de parados y su distribución porcentual según ", variable)))
graf <- ggarrange(graf_absolutos+ theme(legend.position = "none"),
graf_porcentajes,ncol = 1,
labels = c("Número de parados", "Distribución porcentual")) +
theme(plot.title = paste0("Evolución del número de parados y su distribución porcentual según ", variable))
return(graf)
} # graf_evol
print(graf_evol(variab))
